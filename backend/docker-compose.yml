version: "3.9"

services:
  auth_db:
    container_name: auth_db
    image: postgres:14.3-alpine
    env_file: .env
    environment:
      POSTGRES_PASSWORD: ${AUTH_DB_PASSWORD}
      POSTGRES_USER: ${AUTH_DB_USER}
      POSTGRES_DB: ${AUTH_DB_NAME}
    ports:
      - ${AUTH_DB_PORT_HOST}:${AUTH_DB_PORT_CONTAINER}
    volumes:
      - auth_db_data:/var/lib/postgresql/data
    restart: unless-stopped
    command:
      - -p ${AUTH_DB_PORT_CONTAINER}
    networks:
      - network

#  rabbitmq:
#    container_name: rabbit_mq
#    image: rabbitmq:3.10.7-management
#    env_file:
#      - .env
#    hostname: rabbitmq
#    restart: always
#    environment:
#      - RABBITMQ_DEFAULT_USER=${RABBIT_USER}
#      - RABBITMQ_DEFAULT_PASS=${RABBIT_PASSWORD}
#      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit log_levels [{connection,error},{default,error}] disk_free_limit 2147483648
#    volumes:
#      - rabbitmq:/var/lib/rabbitmq
#    ports:
#      - ${RABBIT_PORT_HOST_1}:${RABBIT_PORT_CONTAINER_1}
#      - ${RABBIT_PORT_HOST_2}:${RABBIT_PORT_CONTAINER_2}
#    networks:
#      - network

  auth_service:
    container_name: auth_service
    build:
      context: .
      dockerfile: services/auth_service/Dockerfile
    env_file:
      - .env
    environment:
      - AUTH_DB_HOST=${AUTH_DB_NAME}
      - RABBIT_HOST=rabbitmq
    ports:
      - ${AUTH_SERVICE_PORT_HOST}:${AUTH_SERVICE_PORT_CONTAINER}
    depends_on:
      - auth_db
#      - rabbitmq
    networks:
      - network

volumes:
  auth_db_data:
#  rabbitmq:

networks:
  network:
    name: microservices_network